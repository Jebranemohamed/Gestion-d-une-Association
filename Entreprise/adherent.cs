//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entreprise
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class adherent
    {
        public int ID { get; set; }
        public string CIN { get; set; }
        public string Nom { get; set; }
        public Nullable<System.DateTime> DateInscription { get; set; }
        public string Telephone { get; set; }
        public string Email { get; set; }
        public string Adresse { get; set; }
        public byte[] photo { get; set; }

        public static List<adherent> getAllAdherents()
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<adherent> ls = bd.adherents.ToList<adherent>();
            return ls;
        }


        public static List<adherent> searchAdherent_CIN(string cin)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<adherent> ls = bd.adherents.Where(us => us.CIN.Equals(cin)).ToList<adherent>();
            return ls;
        }
        public static List<adherent> searchAdherent_UserName(string name)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<adherent> ls = bd.adherents.Where(us => us.Nom.Equals(name)).ToList<adherent>();
            return ls;
        }


        public static bool Add_Adherent(string cin, string nom, DateTime inscipt, string phone, string email, string adresse, byte[] photo)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            adherent ad = new adherent();
            try
            {
                ad.CIN = cin;
                ad.Nom = nom;
                ad.DateInscription = inscipt;
                ad.Telephone = phone;
                ad.Email = email;
                ad.Adresse = adresse;
                ad.photo = photo;
                bd.adherents.Add(ad);
                bd.SaveChanges();
            }
            catch (Exception) { return false; }
            return true;
        }

        public static bool Modify_Adherent(string cin0, string cin, string nom, DateTime inscipt, string phone, string email, string adresse, byte[] photo)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            adherent ad = bd.adherents.Where(us => us.CIN.Equals(cin0)).FirstOrDefault();
            try
            {
                ad.CIN = cin;
                ad.Nom = nom;
                ad.DateInscription = inscipt;
                ad.Telephone = phone;
                ad.Email = email;
                ad.Adresse = adresse;
                ad.photo = photo;
                bd.SaveChanges();
            }
            catch (Exception) { return false; }
            return true;
        }

        public static bool Delete_Adherent(string cin0)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            adherent ad = bd.adherents.Where(us => us.CIN.Equals(cin0)).FirstOrDefault();
            try
            {
                bd.adherents.Remove(ad);
                bd.SaveChanges();
            }
            catch (Exception) { return false; }
            return true;
        }

        public static byte[] recoverPhoto(string cin)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            byte[] photo = new byte[1000];
            try
            {
                photo = bd.adherents.Where(ad => ad.CIN.Equals(cin)).FirstOrDefault().photo;
            }
            catch (Exception) { return null; }
            return photo;
        }
    }
}
