//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entreprise
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class utilisateur
    {
        public string CIN { get; set; }
        public string Nom { get; set; }
        public string Pass { get; set; }
        public string userRole { get; set; }

        public static utilisateur ValidateUser(string nom, string pass)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            utilisateur user = bd.utilisateurs.Where(us => us.Nom.Equals(nom) && us.Pass.Equals(pass)).FirstOrDefault();
            return user;
        }

        public static List<utilisateur> getAllUsers()
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<utilisateur> ls = bd.utilisateurs.ToList<utilisateur>();
            return ls;
        }

        public static List<utilisateur> searchUser_CIN(string cin)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<utilisateur> ls = bd.utilisateurs.Where(us => us.CIN.Equals(cin)).ToList<utilisateur>();
            return ls;
        }
        public static List<utilisateur> searchUser_UserName(string name)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<utilisateur> ls = bd.utilisateurs.Where(us => us.Nom.Equals(name)).ToList<utilisateur>();
            return ls;
        }
        public static List<utilisateur> searchUser_UserRole(string role)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            List<utilisateur> ls = bd.utilisateurs.Where(us => us.userRole.Equals(role)).ToList<utilisateur>();
            return ls;
        }

        public static bool Add_User(string cin, string nom, string pass, string userRole)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            utilisateur user = new utilisateur();
            try
            {
                user.CIN = cin;
                user.Nom = nom;
                user.Pass = pass;
                user.userRole = userRole;
                bd.utilisateurs.Add(user);
                bd.SaveChanges();
            }
            catch (Exception) { return false; }
            return true;
        }

        public static bool Modify_User(string cin0, string cin, string nom, string pass, string userRole)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            utilisateur user = bd.utilisateurs.Where(us => us.CIN.Equals(cin0)).FirstOrDefault();
            if (user == null) return false;
            try
            {
                user.CIN = cin;
                user.Nom = nom;
                user.Pass = pass;
                user.userRole = userRole;
                bd.SaveChanges();
            }
            catch (Exception) { return false; }
            return true;
        }

        public static bool Delete_User(string cin0)
        {
            BDGestionAssociationEntities3 bd = new BDGestionAssociationEntities3();
            utilisateur user = bd.utilisateurs.Where(us => us.CIN.Equals(cin0)).FirstOrDefault();
            try
            {
                bd.utilisateurs.Remove(user);
                bd.SaveChanges();
            }
            catch (Exception) { return false; }

            return true;
        }
    }
}
